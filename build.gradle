plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'spharos'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
			'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// query dsl
//	implementation "com.querydsl:querydsl-core:5.0.0"
//	implementation "com.querydsl:querydsl-collections"
//	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
//	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
//	testImplementation 'jakarta.persistence:jakarta.persistence-api'
//	testImplementation 'com.querydsl:querydsl-jpa:5.0.0'
	// feign clients
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	sourceSets {
		main {
			java {
				srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}